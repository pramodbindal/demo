---
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: e2e-tests-tektoncd-pipelines
spec:
  description: |
    An integration test which provisions an ephemeral Hypershift cluster and deploys an Operator
    bundle from a Konflux snapshot. Then Runs E2E Tests
  params:
    - name: registry
      type: string
      default: image-registry.openshift-image-registry.svc:5000/$(context.pipelineRun.namespace)/release-tests
    - name: image
      type: string
      default: quay.io/openshift-pipeline/ci:latest
    - name: repo_url
      type: string
      default: https://github.com/openshift-pipelines/release-tests.git
    - name: revision
      type: string
      default: master
    - description: Snapshot of the application
      name: SNAPSHOT
      default: '{}'
      type: string
    - name: cachePatterns
      type: array
      default: [ "**go.mod", "**go.sum" ]
    - description: Namespace where the the Operator bundle will be deployed.
      name: NAMESPACE
      default: openshift-operators
      type: string
  tasks:
    - name: parse-metadata
      taskRef:
        resolver: git
        params:
          - name: url
            value: https://github.com/konflux-ci/integration-examples
          - name: revision
            value: main
          - name: pathInRepo
            value: tasks/test_metadata.yaml
      params:
        - name: SNAPSHOT
          value: $(params.SNAPSHOT)
    - name: provision-eaas-space
      runAfter:
        - parse-metadata
      taskRef:
        resolver: git
        params:
          - name: url
            value: https://github.com/konflux-ci/build-definitions.git
          - name: revision
            value: main
          - name: pathInRepo
            value: task/eaas-provision-space/0.1/eaas-provision-space.yaml
      params:
        - name: ownerName
          value: $(context.pipelineRun.name)
        - name: ownerUid
          value: $(context.pipelineRun.uid)
    - name: provision-cluster
      runAfter:
        - provision-eaas-space
      taskSpec:
        results:
          - name: clusterName
            value: "$(steps.create-cluster.results.clusterName)"
        steps:
          - name: get-supported-versions
            ref:
              resolver: git
              params:
                - name: url
                  value: https://github.com/konflux-ci/build-definitions.git
                - name: revision
                  value: main
                - name: pathInRepo
                  value: stepactions/eaas-get-supported-ephemeral-cluster-versions/0.1/eaas-get-supported-ephemeral-cluster-versions.yaml
            params:
              - name: eaasSpaceSecretRef
                value: $(tasks.provision-eaas-space.results.secretRef)
          - name: pick-version
            ref:
              resolver: git
              params:
                - name: url
                  value: https://github.com/konflux-ci/build-definitions.git
                - name: revision
                  value: main
                - name: pathInRepo
                  value: stepactions/eaas-get-latest-openshift-version-by-prefix/0.1/eaas-get-latest-openshift-version-by-prefix.yaml
            params:
              - name: prefix
                value: "$(steps.get-supported-versions.results.versions[0])."
          - name: create-cluster
            ref:
              resolver: git
              params:
                - name: url
                  value: https://github.com/konflux-ci/build-definitions.git
                - name: revision
                  value: main
                - name: pathInRepo
                  value: stepactions/eaas-create-ephemeral-cluster-hypershift-aws/0.1/eaas-create-ephemeral-cluster-hypershift-aws.yaml
            params:
              - name: eaasSpaceSecretRef
                value: $(tasks.provision-eaas-space.results.secretRef)
              - name: version
                value: "$(steps.pick-version.results.version)"
              - name: instanceType
                value: m5.2xlarge
    - name: deploy-operator
      runAfter:
        - provision-cluster
      params:
        - name: bundleImage
          value: "$(tasks.parse-metadata.results.component-container-image)"
        - name: namespace
          value: "$(params.NAMESPACE)"
      taskSpec:
        volumes:
          - name: credentials
            emptyDir: { }
        results:
          - name: kubeconfig
            value: "$(steps.get-kubeconfig.results.kubeconfig)"
        params:
          - name: bundleImage
            type: string
          - name: namespace
            type: string
        steps:
          - name: get-kubeconfig
            ref:
              resolver: git
              params:
                - name: url
                  value: https://github.com/konflux-ci/build-definitions.git
                - name: revision
                  value: main
                - name: pathInRepo
                  value: stepactions/eaas-get-ephemeral-cluster-credentials/0.1/eaas-get-ephemeral-cluster-credentials.yaml
            params:
              - name: eaasSpaceSecretRef
                value: $(tasks.provision-eaas-space.results.secretRef)
              - name: clusterName
                value: "$(tasks.provision-cluster.results.clusterName)"
              - name: credentials
                value: credentials
          - name: operator-sdk-run-bundle
            image: quay.io/operator-framework/operator-sdk:latest
            env:
              - name: KUBECONFIG
                value: "/credentials/$(steps.get-kubeconfig.results.kubeconfig)"
            volumeMounts:
              - name: credentials
                mountPath: /credentials
            args:
              - run
              - bundle
              - --namespace
              - "$(params.namespace)"
              - "$(params.bundleImage)"
    - name: e2e-test
      runAfter:
        - deploy-operator
      params:
        - name: SNAPSHOT
          value: $(params.SNAPSHOT)
      taskSpec:
        params:
          - name: SNAPSHOT
        volumes:
          - name: credentials
            emptyDir: { }
          - name: source
            emptyDir: { }
        stepTemplate:
          volumeMounts:
            - name: source
              mountPath: /source
            - name: credentials
              mountPath: /credentials
        steps:
          - name: create-repo
            image: $(params.image)
            script: |
              mkdir -p /source/repo
              chmod 777 /source/repo
          - name: fetch-repo
            ref:
              resolver: http
              params:
                - name: url
                  value: https://raw.githubusercontent.com/tektoncd/catalog/main/stepaction/git-clone/0.1/git-clone.yaml
            params:
              - name: output-path
                value: /source/repo
              - name: url
                value: $(params.repo_url)
              - name: revision
                value: $(params.revision)
          - name: cache-fetch
            ref:
              resolver: http
              params:
                - name: url
                  value: https://raw.githubusercontent.com/openshift-pipelines/tekton-caches/main/tekton/cache-fetch.yaml
            params:
              - name: patterns
                value: $(params.cachePatterns)
              - name: source
                value: oci://$(params.registry):{{hash}}
              - name: cachePath
                value: /source/cache
              - name: workingdir
                value: /source/repo
          - name: get-kubeconfig
            ref:
              resolver: git
              params:
                - name: url
                  value: https://github.com/konflux-ci/build-definitions.git
                - name: revision
                  value: main
                - name: pathInRepo
                  value: stepactions/eaas-get-ephemeral-cluster-credentials/0.1/eaas-get-ephemeral-cluster-credentials.yaml
            params:
              - name: eaasSpaceSecretRef
                value: $(tasks.provision-eaas-space.results.secretRef)
              - name: clusterName
                value: "$(tasks.provision-cluster.results.clusterName)"
              - name: credentials
                value: credentials
          - image: $(params.image)
            workingDir: /source/repo
            name: run-e2e-tests
            env:
              - name: GOCACHE
                value: /source/cache/gocache
              - name: GOMODCACHE
                value: /source/cache/gomodcache
              - name: KUBECONFIG
                value: "/credentials/$(tasks.deploy-operator.results.kubeconfig)"
              - name: GITHUB_TOKEN
                valueFrom:
                  secretKeyRef:
                    key: github-token
                    name: github
                    optional: true
            script: |
              set -x
              gauge run --tags="" --log-level=debug --verbose release-tests/specs/pipelines/git-resolvers.spec || true

              oc create secret generic github-auth-secret --from-literal github-auth-key=$GITHUB_TOKEN -n openshift-pipelines
              PATCH_DATA="{\"spec\":{\"pipeline\":{\"git-resolver-config\":{ \"api-token-secret-key\": \"github-auth-key\",\"api-token-secret-name\":\"github-auth-secret\",\"api-token-secret-namespace\":\"openshift-pipelines\",\"default-revision\":\"main\",\"fetch-timeout\":\"1m\",\"scm-type\":\"github\"}}}}"
              echo $PATCH_DATA | jq
              oc patch tektonconfig config -p "${PATCH_DATA}" --type=merge
              gauge run --tags="" --log-level=debug --verbose release-tests/specs/pipelines
