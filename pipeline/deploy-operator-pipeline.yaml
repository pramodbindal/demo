apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  generateName: pbindal-pipelines-e2e-tests-
  labels:
    appstudio.openshift.io/component: operator-next-index-4-17
spec:
  params:
    - name: NAMESPACE
      value: openshift-operators
    - name: SNAPSHOT
      value: { "application": "operator-next","components": [ { "name": "operator-next-proxy","containerImage": "quay.io/redhat-user-workloads/tekton-ecosystem-tenant/operator-next/proxy@sha256:279177211cc58a8aeff7ffa065b4eb9c142c6e910b644d8bfa746c959bfc4854","source": { "git": { "url": "https://github.com/openshift-pipelines/operator","revision": "3f6c336e0766b4e0d83073826f2d38c3bb433186","dockerfileUrl": ".konflux/dockerfiles/proxy.Dockerfile" } } },{ "name": "operator-next-webhook","containerImage": "quay.io/redhat-user-workloads/tekton-ecosystem-tenant/operator-next/webhook@sha256:267dd1a3e968ebaf756c6823b5c77e383e681623258d089021e221482d044b4f","source": { "git": { "url": "https://github.com/openshift-pipelines/operator","revision": "3f6c336e0766b4e0d83073826f2d38c3bb433186","dockerfileUrl": ".konflux/dockerfiles/webhook.Dockerfile" } } },{ "name": "operator-next-bundle","containerImage": "quay.io/redhat-user-workloads/tekton-ecosystem-tenant/operator-next/bundle@sha256:21f5473d0043da9a1d96693ca5b360351f4d8c117fca1d52be6e954e095b4bda","source": { "git": { "url": "https://github.com/pramodbindal/operator","revision": "482654884414cebd70188af18dea75974fd0d53f" } } },{ "name": "operator-next-index-4-15","containerImage": "quay.io/redhat-user-workloads/tekton-ecosystem-tenant/operator-next/index-4.15@sha256:940aa99f99aad13ff50a29f301700871f7add712144761e3e8defb42e44a73da","source": { "git": { "url": "https://github.com/openshift-pipelines/operator.git","revision": "6ddb210d1f239e2ad7e19dc53cbd46d6769d1e34","dockerfileUrl": ".konflux/olm-catalog/openshift-pipelines/index/v4-15/Dockerfile.catalog" } } },{ "name": "operator-next-index-4-16","containerImage": "quay.io/redhat-user-workloads/tekton-ecosystem-tenant/operator-next/index-4.16@sha256:a2fcc0a2b9cb449da9f125fc0d882f597a4affcf9bd8dd4baf09ca75f159c94e","source": { "git": { "url": "https://github.com/openshift-pipelines/operator.git","revision": "6ddb210d1f239e2ad7e19dc53cbd46d6769d1e34","dockerfileUrl": ".konflux/olm-catalog/openshift-pipelines/index/v4.16/Dockerfile.catalog" } } },{ "name": "operator-next-index-4-17","containerImage": "quay.io/redhat-user-workloads/tekton-ecosystem-tenant/operator-next/index-4.17@sha256:70cef6157a1a7a59da894578ef337f86293b5fa9bab4ad24753329a039f11c99","source": { "git": { "url": "https://github.com/openshift-pipelines/operator.git","revision": "6ddb210d1f239e2ad7e19dc53cbd46d6769d1e34","dockerfileUrl": ".konflux/olm-catalog/openshift-pipelines/index/v4.17/Dockerfile.catalog" } } },{ "name": "operator-next-operator","containerImage": "quay.io/redhat-user-workloads/tekton-ecosystem-tenant/operator-next/operator@sha256:2a3ea78b9b8634a6afc2e46de2e86a4d0f9f5f85f9ec76f0b524fb6589ce2719","source": { "git": { "url": "https://github.com/openshift-pipelines/operator","revision": "3f6c336e0766b4e0d83073826f2d38c3bb433186","dockerfileUrl": ".konflux/dockerfiles/operator.Dockerfile" } } } ],"artifacts": { } }


  pipelineSpec:
    params:
      - description: Snapshot of the application
        name: SNAPSHOT
        default: '{"components": [{"name":"test-app", "containerImage": "quay.io/example/repo:latest"}]}'
        type: string
      - description: Namespace where the the Operator bundle will be deployed.
        name: NAMESPACE
        default: openshift-operators
        type: string
      - name: image
        type: string
        default: quay.io/openshift-pipeline/ci:latest
      - name: repo_url
        type: string
        default: https://github.com/pramodbindal/release-tests
      - name: revision
        type: string
        default: master

      - name: version
        type: string
        default: "4.17"

    tasks:
      - name: parse-metadata
        taskRef:
          resolver: git
          params:
            - name: url
              value: https://github.com/konflux-ci/integration-examples
            - name: revision
              value: main
            - name: pathInRepo
              value: tasks/test_metadata.yaml
        params:
          - name: SNAPSHOT
            value: $(params.SNAPSHOT)
      - name: provision-eaas-space
        runAfter:
          - parse-metadata
        taskRef:
          resolver: git
          params:
            - name: url
              value: https://github.com/konflux-ci/build-definitions.git
            - name: revision
              value: main
            - name: pathInRepo
              value: task/eaas-provision-space/0.1/eaas-provision-space.yaml
        params:
          - name: ownerName
            value: $(context.pipelineRun.name)
          - name: ownerUid
            value: $(context.pipelineRun.uid)
      - name: provision-cluster
        runAfter:
          - provision-eaas-space
        taskSpec:
          results:
            - name: clusterName
              value: "$(steps.create-cluster.results.clusterName)"
          steps:
            - name: pick-version
              ref:
                resolver: git
                params:
                  - name: url
                    value: https://github.com/konflux-ci/build-definitions.git
                  - name: revision
                    value: main
                  - name: pathInRepo
                    value: stepactions/eaas-get-latest-openshift-version-by-prefix/0.1/eaas-get-latest-openshift-version-by-prefix.yaml
              params:
                - name: prefix
                  value: "$(params.version)"
            - name: create-cluster
              ref:
                resolver: git
                params:
                  - name: url
                    value: https://github.com/konflux-ci/build-definitions.git
                  - name: revision
                    value: main
                  - name: pathInRepo
                    value: stepactions/eaas-create-ephemeral-cluster-hypershift-aws/0.1/eaas-create-ephemeral-cluster-hypershift-aws.yaml
              params:
                - name: eaasSpaceSecretRef
                  value: $(tasks.provision-eaas-space.results.secretRef)
                - name: version
                  value: "$(steps.pick-version.results.version)"
                - name: instanceType
                  value: m5.large
      - name: deploy-operator
        runAfter:
          - provision-cluster
        params:
          - name: bundleImage
            value: "$(tasks.parse-metadata.results.component-container-image)"
          - name: namespace
            value: "$(params.NAMESPACE)"
        taskSpec:
          params:
            - name: bundleImage
              type: string
              default: ""
            - name: namespace
              type: string
          volumes:
            - name: credentials
              emptyDir: { }
          stepTemplate:
            volumeMounts:
              - name: credentials
                mountPath: /credentials
            image: $(params.image)

          steps:
            - name: get-kubeconfig
              ref:
                resolver: git
                params:
                  - name: url
                    value: https://github.com/konflux-ci/build-definitions.git
                  - name: revision
                    value: main
                  - name: pathInRepo
                    value: stepactions/eaas-get-ephemeral-cluster-credentials/0.1/eaas-get-ephemeral-cluster-credentials.yaml
              params:
                - name: eaasSpaceSecretRef
                  value: $(tasks.provision-eaas-space.results.secretRef)
                - name: clusterName
                  value: "$(tasks.provision-cluster.results.clusterName)"
                - name: credentials
                  value: credentials
            - name: create-catalog
              env:
                - name: KUBECONFIG
                  value: "/credentials/$(steps.get-kubeconfig.results.kubeconfig)"
              script: |
                #!/usr/bin/env bash
                export INDEX_IMAGE=$(params.bundleImage)
                cat <<EOF | oc apply -f-
                  apiVersion: operators.coreos.com/v1alpha1
                  kind: CatalogSource
                  metadata:
                    name: "custom-osp-nightly"
                    namespace: openshift-marketplace
                  spec:
                    sourceType: grpc
                    image: $INDEX_IMAGE
                    displayName: "Custom OSP Nightly"
                    publisher: Red Hat Local
                    updateStrategy:
                    registryPoll:
                    interval: 30m
                EOF
            - name: create-subscription
              env:
                - name: KUBECONFIG
                  value: "/credentials/$(steps.get-kubeconfig.results.kubeconfig)"
              script: |
                #!/usr/bin/env bash
                oc delete subscription openshift-pipelines-operator -n openshift-operators || true
                cat <<EOF | oc apply -f-
                  apiVersion: operators.coreos.com/v1alpha1
                  kind: Subscription
                  metadata:
                    name: openshift-pipelines-operator
                    namespace: openshift-operators
                  spec:
                    name: openshift-pipelines-operator-rh
                    source: "custom-osp-nightly"
                    sourceNamespace: openshift-marketplace
                EOF
