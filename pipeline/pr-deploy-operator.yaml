---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  generateName: deploy-operator-pipelines-e2e-tests-
  labels:
    appstudio.openshift.io/component: operator-main-bundle
spec:
  PipelineSpec:
    workspaces:
      - name: tr-workspace
        emptyDir: { }

    params:
      - name: image
        type: string
        default: quay.io/openshift-pipeline/ci:latest
      - description: Snapshot of the application
        name: SNAPSHOT
        default: '{}'
        type: string
      - description: Namespace where the the Operator bundle will be deployed.
        name: NAMESPACE
        default: openshift-operators
        type: string
      - name: repo_url
        type: string
        default: https://github.com/pramodbindal/release-tests
      - name: revision
        type: string
        default: master
    tasks:
      - name: deploy-operator
        params:
          - name: indexImage
            value: "quay.io/redhat-user-workloads/tekton-ecosystem-tenant/operator-main/index@sha256:493b6d11b4034419e73d2f2e90e63571465d58cfb3560ee873fa2a73bca1b762"
          - name: namespace
            value: "$(params.NAMESPACE)"
        taskSpec:
          params:
            - name: indexImage
              type: string
            - name: namespace
              type: string
          volumes:
            - name: credentials
              secret:
                secretName: rosa
          stepTemplate:
            volumeMounts:
              - name: credentials
                mountPath: /credentials
          steps:
            - name: create-catalog-source
              image: $(params.image)
              env:
                - name: KUBECONFIG
                  value: "/credentials/kubeconfig"
              script: |
                #!/usr/bin/env bash
                cat <<EOF | oc apply -f-
                apiVersion: operators.coreos.com/v1alpha1
                kind: CatalogSource
                metadata:
                  name: custom-osp-nightly
                  namespace: openshift-marketplace
                spec:
                  sourceType: grpc
                  image: $(params.indexImage)
                  displayName: "Custom OSP Nightly"
                  updateStrategy:
                    registryPoll:
                      interval: 30m
                EOF

            - name: create-subscription
              image: $(params.image)
              env:
                - name: KUBECONFIG
                  value: "/credentials/kubeconfig"
              script: |
                #!/usr/bin/env bash
                sleep 10
                cat <<EOF | oc apply -f-
                apiVersion: operators.coreos.com/v1alpha1
                kind: Subscription
                metadata:
                  name: openshift-pipelines-operator
                  namespace: $(params.namespace)
                spec:
                  channel: latest
                  name: openshift-pipelines-operator-rh
                  source: custom-osp-nightly
                  sourceNamespace: openshift-marketplace
                EOF
      - name: e2e-test-bed
        runAfter:
          - deploy-operator
        params:
          - name: SNAPSHOT
            value: $(params.SNAPSHOT)
        taskSpec:
          params:
            - name: SNAPSHOT
          volumes:
            - name: credentials
              secret:
                secretName: rosa
                defaultMode: 0666
            #emptyDir: { }
            - name: source
              emptyDir: { }
          stepTemplate:
            env:
              - name: GOCACHE
                value: /source/cache/gocache
              - name: GOMODCACHE
                value: /source/cache/gomodcache
              - name: KUBECONFIG
                value: "/credentials/kubeconfig"
            volumeMounts:
              - name: source
                mountPath: /source
              - name: credentials
                mountPath: /credentials
          steps:
            - name: create-repo
              image: $(params.image)
              script: |
                mkdir -p /source/repo
                chmod 777 /source/repo
            - name: fetch-repo
              ref:
                resolver: http
                params:
                  - name: url
                    value: https://raw.githubusercontent.com/tektoncd/catalog/main/stepaction/git-clone/0.1/git-clone.yaml
              params:
                - name: output-path
                  value: /source/repo
                - name: url
                  value: $(params.repo_url)
                - name: revision
                  value: $(params.revision)

            #            - name: get-kubeconfig
            #              ref:
            #                resolver: git
            #                params:
            #                  - name: url
            #                    value: https://github.com/konflux-ci/build-definitions.git
            #                  - name: revision
            #                    value: main
            #                  - name: pathInRepo
            #                    value: stepactions/eaas-get-ephemeral-cluster-credentials/0.1/eaas-get-ephemeral-cluster-credentials.yaml
            #              params:
            #                - name: eaasSpaceSecretRef
            #                  value: $(tasks.provision-eaas-space.results.secretRef)
            #                - name: clusterName
            #                  value: "$(tasks.provision-cluster.results.clusterName)"
            #                - name: credentials
            #                  value: credentials
            - image: $(params.image)
              workingDir: /source/repo
              name: configure-tekton-config
              env:
                - name: GITHUB_TOKEN
                  valueFrom:
                    secretKeyRef:
                      key: github-token
                      name: github
                      optional: true
              script: |
                cp $KUBECONFIG  /tmp/kubeconfig
                export KUBECONFIG=/tmp/kubeconfig
                gauge run --tags="" --log-level=debug --verbose specs/konflux-olm.spec
            - name: run-e2e-tests-operator
              workingDir: /source/repo
              image: $(params.image)
              script: |
                cp $KUBECONFIG  /tmp/kubeconfig
                export KUBECONFIG=/tmp/kubeconfig
                gauge run --tags="" --log-level=debug --verbose specs/pipelines/
                gauge run --tags="" --log-level=debug --verbose specs/operator/
                gauge run --tags="" --log-level=debug --verbose specs/triggers/
                gauge run --tags="" --log-level=debug --verbose specs/pac/
                gauge run --tags="" --log-level=debug --verbose specs/chains/
                gauge run --tags="" --log-level=debug --verbose specs/hub/
                gauge run --tags="" --log-level=debug --verbose specs/results/
                gauge run --tags="" --log-level=debug --verbose specs/manualapprovalgate/